{"version":3,"sources":["fix_bootstrap_tabs.js","youtube.js"],"names":["$","document","ready","click","e","_this","this","hasClass","setTimeout","removeClass","addClass","videos","tag","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","players","onYouTubeIframeAPIReady","map","video","index","YT","Player","videoId","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","data","PlayerState","UNSTARTED","PLAYING","target","a","parents","PAUSED","ENDED","CUED","id","stopVideo","playVideo"],"mappings":"aAAAA,EAAEC,UAAUC,MAAM,WAChBF,EAAE,oBAAoBG,MAAM,SAASC,GAAG,IAAAC,EAAAC,KAClCN,EAAEM,MAAMC,SAAS,gBACnBC,WACE,WACER,EAAEK,GAAMI,YAAY,eACpBT,EAAE,2BAA2BS,YAAY,eACzCT,EAAE,YAAYU,SAAS,gBACtB,SCRX,IAAMC,OAAS,CAAC,cAAe,cAAe,cAAe,cAAe,eAExEC,IAAMX,SAASY,cAAc,UAEjCD,IAAIE,IAAM,qCACV,IAAIC,eAAiBd,SAASe,qBAAqB,UAAU,GAC7DD,eAAeE,WAAWC,aAAaN,IAAKG,gBAI5C,IAAII,QAAU,GACd,SAASC,0BACPT,OAAOU,IAAI,SAACC,EAAOC,GACjBJ,QAAQI,GAAS,IAAIC,GAAGC,OAAO,UAAYF,EAAO,CAChDG,QAASJ,EACTK,OAAQ,CACNC,QAAWC,cACXC,cAAiBC,yBAOzB,SAASF,cAAcG,IAOvB,SAASD,oBAAoBC,GACvBA,EAAMC,MAAQT,GAAGU,YAAYC,WAAaH,EAAMC,MAAQT,GAAGU,YAAYE,UACzEpC,EAAEgC,EAAMK,OAAOC,GAAGC,QAAQ,UAAU7B,SAAS,QAC7CV,EAAE,QAAQU,SAAS,eAEjBsB,EAAMC,MAAQT,GAAGU,YAAYM,QAAUR,EAAMC,MAAQT,GAAGU,YAAYO,OAAUT,EAAMC,MAAQT,GAAGU,YAAYQ,OAC7G1C,EAAEgC,EAAMK,OAAOC,GAAGC,QAAQ,UAAU9B,YAAY,QAChDT,EAAE,QAAQS,YAAY,eAG1BT,EAAE,UAAUG,MAAM,WAChB,IACMwC,EADO3C,EAAEM,MAAMiC,QAAQ,UACXN,KAAK,MACvBd,QAAQwB,GAAIC,cAEd5C,EAAE,qBAAqBG,MAAM,WAC3B,IACMwC,EADO3C,EAAEM,MAAMiC,QAAQ,UACXN,KAAK,MACvBd,QAAQwB,GAAIE","file":"scripts.min.js","sourcesContent":["$(document).ready(function() {\r\n  $('#myTab .nav-link').click(function(e) {\r\n    if ($(this).hasClass('active show')) {\r\n      setTimeout(\r\n        () => {\r\n          $(this).removeClass('show active');\r\n          $('#myTabContent .tab-pane').removeClass('show active');\r\n          $('#default').addClass('show active');\r\n        }, 200\r\n      );\r\n    }\r\n  });\r\n})","const videos = ['TZipNpBCmzI', 'TZipNpBCmzI', 'TZipNpBCmzI', 'TZipNpBCmzI', 'TZipNpBCmzI'];\r\n// 2. This code loads the IFrame Player API code asynchronously.\r\nvar tag = document.createElement('script');\r\n\r\ntag.src = \"https://www.youtube.com/iframe_api\";\r\nvar firstScriptTag = document.getElementsByTagName('script')[0];\r\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n// 3. This function creates an <iframe> (and YouTube player)\r\n//    after the API code downloads.\r\nvar players = [];\r\nfunction onYouTubeIframeAPIReady() {\r\n  videos.map((video, index) => {\r\n    players[index] = new YT.Player('player-' + index, {\r\n      videoId: video,\r\n      events: {\r\n        'onReady': onPlayerReady,\r\n        'onStateChange': onPlayerStateChange\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// 4. The API will call this function when the video player is ready.\r\nfunction onPlayerReady(event) {\r\n  \r\n}\r\n\r\n// 5. The API calls this function when the player's state changes.\r\n//    The function indicates that when playing a video (state=1),\r\n//    the player should play for six seconds and then stop.\r\nfunction onPlayerStateChange(event) {\r\n  if (event.data == YT.PlayerState.UNSTARTED || event.data == YT.PlayerState.PLAYING) {\r\n    $(event.target.a).parents('.video').addClass('play');\r\n    $('body').addClass('video-play');\r\n  }\r\n  if (event.data == YT.PlayerState.PAUSED || event.data == YT.PlayerState.ENDED  || event.data == YT.PlayerState.CUED) {\r\n    $(event.target.a).parents('.video').removeClass('play');\r\n    $('body').removeClass('video-play');\r\n  }\r\n}\r\n$('.close').click(function() {\r\n  let parent = $(this).parents('.video');\r\n  const id = parent.data('id');\r\n  players[id].stopVideo();\r\n})\r\n$('.video .text-wrap').click(function() {\r\n  let parent = $(this).parents('.video');\r\n  const id = parent.data('id');\r\n  players[id].playVideo();\r\n})\r\n"]}